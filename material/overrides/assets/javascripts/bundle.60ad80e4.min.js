(function(e, a) { for(var i in a) e[i] = a[i]; }(window, /******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		4: 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// add entry module to deferred list
/******/ 	deferredModules.push([63,0]);
/******/ 	// run deferred modules when ready
/******/ 	return checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "t", function() { return /* reexport */ watchDocument; });
__webpack_require__.d(__webpack_exports__, "d", function() { return /* reexport */ getElement; });
__webpack_require__.d(__webpack_exports__, "f", function() { return /* reexport */ getElementOrThrow; });
__webpack_require__.d(__webpack_exports__, "c", function() { return /* reexport */ getActiveElement; });
__webpack_require__.d(__webpack_exports__, "h", function() { return /* reexport */ getElements; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* reexport */ createElement; });
__webpack_require__.d(__webpack_exports__, "j", function() { return /* reexport */ replaceElement; });
__webpack_require__.d(__webpack_exports__, "n", function() { return /* reexport */ setElementFocus; });
__webpack_require__.d(__webpack_exports__, "u", function() { return /* reexport */ watchElementFocus; });
__webpack_require__.d(__webpack_exports__, "w", function() { return /* reexport */ watchElementThreshold; });
__webpack_require__.d(__webpack_exports__, "o", function() { return /* reexport */ setElementSelection; });
__webpack_require__.d(__webpack_exports__, "g", function() { return /* reexport */ getElementSize; });
__webpack_require__.d(__webpack_exports__, "e", function() { return /* reexport */ getElementContentSize; });
__webpack_require__.d(__webpack_exports__, "v", function() { return /* reexport */ watchElementSize; });
__webpack_require__.d(__webpack_exports__, "x", function() { return /* reexport */ watchKeyboard; });
__webpack_require__.d(__webpack_exports__, "i", function() { return /* reexport */ getLocation; });
__webpack_require__.d(__webpack_exports__, "p", function() { return /* reexport */ setLocation; });
__webpack_require__.d(__webpack_exports__, "y", function() { return /* reexport */ watchLocation; });
__webpack_require__.d(__webpack_exports__, "q", function() { return /* reexport */ setLocationHash; });
__webpack_require__.d(__webpack_exports__, "z", function() { return /* reexport */ watchLocationTarget; });
__webpack_require__.d(__webpack_exports__, "A", function() { return /* reexport */ watchMedia; });
__webpack_require__.d(__webpack_exports__, "B", function() { return /* reexport */ watchPrint; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ at; });
__webpack_require__.d(__webpack_exports__, "k", function() { return /* reexport */ request; });
__webpack_require__.d(__webpack_exports__, "l", function() { return /* reexport */ requestJSON; });
__webpack_require__.d(__webpack_exports__, "m", function() { return /* reexport */ requestXML; });
__webpack_require__.d(__webpack_exports__, "r", function() { return /* reexport */ setToggle; });
__webpack_require__.d(__webpack_exports__, "C", function() { return /* reexport */ watchToggle; });
__webpack_require__.d(__webpack_exports__, "D", function() { return /* reexport */ watchViewport; });
__webpack_require__.d(__webpack_exports__, "E", function() { return /* reexport */ watchViewportAt; });
__webpack_require__.d(__webpack_exports__, "s", function() { return /* reexport */ setViewportOffset; });
__webpack_require__.d(__webpack_exports__, "F", function() { return /* reexport */ watchWorker; });

// UNUSED EXPORTS: getElementOffset, watchElementOffset, getLocationHash, watchLocationHash, getToggle, getViewportOffset, watchViewportOffset, getViewportSize, watchViewportSize

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/ReplaySubject.js
var ReplaySubject = __webpack_require__(48);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/observable/fromEvent.js
var fromEvent = __webpack_require__(64);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/mapTo.js
var mapTo = __webpack_require__(49);

// CONCATENATED MODULE: ./src/assets/javascripts/browser/document/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */


/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Watch document
 *
 * Documents must be implemented as subjects, so all downstream observables are
 * automatically updated when a new document is emitted. This enabled features
 * like instant loading.
 *
 * @returns Document subject
 */
function watchDocument() {
    const document$ = new ReplaySubject["a" /* ReplaySubject */]();
    Object(fromEvent["a" /* fromEvent */])(document, "DOMContentLoaded")
        .pipe(Object(mapTo["a" /* mapTo */])(document))
        .subscribe(document$);
    /* Return document */
    return document$;
}

// CONCATENATED MODULE: ./src/assets/javascripts/browser/element/_/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */
function getElement(selector, node = document) {
    return node.querySelector(selector) || undefined;
}
function getElementOrThrow(selector, node = document) {
    const el = getElement(selector, node);
    if (typeof el === "undefined")
        throw new ReferenceError(`Missing element: expected "${selector}" to be present`);
    return el;
}
/**
 * Retrieve the currently active element
 *
 * @returns Element or nothing
 */
function getActiveElement() {
    return document.activeElement instanceof HTMLElement
        ? document.activeElement
        : undefined;
}
function getElements(selector, node = document) {
    return Array.from(node.querySelectorAll(selector));
}
/* ------------------------------------------------------------------------- */
/**
 * Create an element
 *
 * @template T - Tag name type
 *
 * @param tagName - Tag name
 *
 * @returns Element
 */
function createElement(tagName) {
    return document.createElement(tagName);
}
/**
 * Replace an element with another element
 *
 * @param source - Source element
 * @param target - Target element
 */
function replaceElement(source, target) {
    source.replaceWith(target);
}

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/observable/merge.js
var merge = __webpack_require__(65);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/map.js
var map = __webpack_require__(38);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/startWith.js
var startWith = __webpack_require__(66);

// CONCATENATED MODULE: ./src/assets/javascripts/browser/element/focus/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */



/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Set element focus
 *
 * @param el - Element
 * @param value - Whether the element should be focused
 */
function setElementFocus(el, value = true) {
    if (value)
        el.focus();
    else
        el.blur();
}
/* ------------------------------------------------------------------------- */
/**
 * Watch element focus
 *
 * @param el - Element
 *
 * @returns Element focus observable
 */
function watchElementFocus(el) {
    return Object(merge["a" /* merge */])(Object(fromEvent["a" /* fromEvent */])(el, "focus"), Object(fromEvent["a" /* fromEvent */])(el, "blur"))
        .pipe(Object(map["a" /* map */])(({ type }) => type === "focus"), Object(startWith["a" /* startWith */])(el === getActiveElement()));
}

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/distinctUntilChanged.js
var distinctUntilChanged = __webpack_require__(52);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/Subject.js + 1 modules
var Subject = __webpack_require__(28);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/observable/defer.js
var defer = __webpack_require__(67);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/observable/of.js
var of = __webpack_require__(68);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/observable/never.js
var never = __webpack_require__(69);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/switchMap.js
var switchMap = __webpack_require__(45);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/finalize.js
var finalize = __webpack_require__(70);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/shareReplay.js
var shareReplay = __webpack_require__(71);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/tap.js
var tap = __webpack_require__(72);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/filter.js
var filter = __webpack_require__(51);

// CONCATENATED MODULE: ./src/assets/javascripts/browser/element/size/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */


/* ----------------------------------------------------------------------------
 * Data
 * ------------------------------------------------------------------------- */
/**
 * Resize observer entry subject
 */
const entry$ = new Subject["a" /* Subject */]();
/**
 * Resize observer observable
 *
 * This observable will create a `ResizeObserver` on the first subscription
 * and will automatically terminate it when there are no more subscribers.
 * It's quite important to centralize observation in a single `ResizeObserver`,
 * as the performance difference can be quite dramatic, as the link shows.
 *
 * @see https://bit.ly/3iIYfEm - Google Groups on performance
 */
const observer$ = Object(defer["a" /* defer */])(() => Object(of["a" /* of */])(new ResizeObserver(entries => {
    for (const entry of entries)
        entry$.next(entry);
})))
    .pipe(Object(switchMap["a" /* switchMap */])(resize => never["a" /* NEVER */].pipe(Object(startWith["a" /* startWith */])(resize))
    .pipe(Object(finalize["a" /* finalize */])(() => resize.disconnect()))), Object(shareReplay["a" /* shareReplay */])(1));
/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Retrieve element size
 *
 * @param el - Element
 *
 * @returns Element size
 */
function getElementSize(el) {
    return {
        width: el.offsetWidth,
        height: el.offsetHeight
    };
}
/**
 * Retrieve element content size, i.e. including overflowing content
 *
 * @param el - Element
 *
 * @returns Element size
 */
function getElementContentSize(el) {
    return {
        width: el.scrollWidth,
        height: el.scrollHeight
    };
}
/* ------------------------------------------------------------------------- */
/**
 * Watch element size
 *
 * This function returns an observable that subscribes to a single internal
 * instance of `ResizeObserver` upon subscription, and emit resize events until
 * termination. Note that this function should not be called with the same
 * element twice, as the first unsubscription will terminate observation.
 *
 * @param el - Element
 *
 * @returns Element size observable
 */
function watchElementSize(el) {
    return observer$
        .pipe(Object(tap["a" /* tap */])(observer => observer.observe(el)), Object(switchMap["a" /* switchMap */])(observer => entry$
        .pipe(Object(filter["a" /* filter */])(({ target }) => target === el), Object(finalize["a" /* finalize */])(() => observer.unobserve(el)), Object(map["a" /* map */])(({ contentRect }) => ({
        width: contentRect.width,
        height: contentRect.height
    })))), Object(startWith["a" /* startWith */])(getElementSize(el)));
}

// CONCATENATED MODULE: ./src/assets/javascripts/browser/element/offset/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */



/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Retrieve element offset
 *
 * @param el - Element
 *
 * @returns Element offset
 */
function getElementOffset(el) {
    return {
        x: el.scrollLeft,
        y: el.scrollTop
    };
}
/* ------------------------------------------------------------------------- */
/**
 * Watch element offset
 *
 * @param el - Element
 *
 * @returns Element offset observable
 */
function watchElementOffset(el) {
    return Object(merge["a" /* merge */])(Object(fromEvent["a" /* fromEvent */])(el, "scroll"), Object(fromEvent["a" /* fromEvent */])(window, "resize"))
        .pipe(Object(map["a" /* map */])(() => getElementOffset(el)), Object(startWith["a" /* startWith */])(getElementOffset(el)));
}
/**
 * Watch element threshold
 *
 * This function returns an observable which emits whether the bottom scroll
 * offset of an elements is within a certain threshold.
 *
 * @param el - Element
 * @param threshold - Threshold
 *
 * @returns Element threshold observable
 */
function watchElementThreshold(el, threshold = 16) {
    return watchElementOffset(el)
        .pipe(Object(map["a" /* map */])(({ y }) => {
        const visible = getElementSize(el);
        const content = getElementContentSize(el);
        return y >= (content.height - visible.height - threshold);
    }), Object(distinctUntilChanged["a" /* distinctUntilChanged */])());
}

// CONCATENATED MODULE: ./src/assets/javascripts/browser/element/selection/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */
/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Set element text selection
 *
 * @param el - Element
 */
function setElementSelection(el) {
    if (el instanceof HTMLInputElement)
        el.select();
    else
        throw new Error("Not implemented");
}

// CONCATENATED MODULE: ./src/assets/javascripts/browser/element/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */






// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/share.js
var share = __webpack_require__(50);

// CONCATENATED MODULE: ./src/assets/javascripts/browser/toggle/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */



/* ----------------------------------------------------------------------------
 * Data
 * ------------------------------------------------------------------------- */
/**
 * Toggle map
 */
const toggles = {
    drawer: getElementOrThrow("[data-md-toggle=drawer]"),
    search: getElementOrThrow("[data-md-toggle=search]")
};
/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Retrieve the value of a toggle
 *
 * @param name - Toggle
 *
 * @returns Toggle value
 */
function getToggle(name) {
    return toggles[name].checked;
}
/**
 * Set toggle
 *
 * Simulating a click event seems to be the most cross-browser compatible way
 * of changing the value while also emitting a `change` event. Before, Material
 * used `CustomEvent` to programmatically change the value of a toggle, but this
 * is a much simpler and cleaner solution which doesn't require a polyfill.
 *
 * @param name - Toggle
 * @param value - Toggle value
 */
function setToggle(name, value) {
    if (toggles[name].checked !== value)
        toggles[name].click();
}
/* ------------------------------------------------------------------------- */
/**
 * Watch toggle
 *
 * @param name - Toggle
 *
 * @returns Toggle value observable
 */
function watchToggle(name) {
    const el = toggles[name];
    return Object(fromEvent["a" /* fromEvent */])(el, "change")
        .pipe(Object(map["a" /* map */])(() => el.checked), Object(startWith["a" /* startWith */])(el.checked));
}

// CONCATENATED MODULE: ./src/assets/javascripts/browser/keyboard/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */




/* ----------------------------------------------------------------------------
 * Helper functions
 * ------------------------------------------------------------------------- */
/**
 * Check whether an element may receive keyboard input
 *
 * @param el - Element
 *
 * @returns Test result
 */
function isSusceptibleToKeyboard(el) {
    switch (el.tagName) {
        /* Form elements */
        case "INPUT":
        case "SELECT":
        case "TEXTAREA":
            return true;
        /* Everything else */
        default:
            return el.isContentEditable;
    }
}
/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Watch keyboard
 *
 * @returns Keyboard observable
 */
function watchKeyboard() {
    return Object(fromEvent["a" /* fromEvent */])(window, "keydown")
        .pipe(Object(filter["a" /* filter */])(ev => !(ev.metaKey || ev.ctrlKey)), Object(map["a" /* map */])(ev => ({
        mode: getToggle("search") ? "search" : "global",
        type: ev.key,
        claim() {
            ev.preventDefault();
            ev.stopPropagation();
        }
    })), Object(filter["a" /* filter */])(({ mode }) => {
        if (mode === "global") {
            const active = getActiveElement();
            if (typeof active !== "undefined")
                return !isSusceptibleToKeyboard(active);
        }
        return true;
    }), Object(share["a" /* share */])());
}

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/BehaviorSubject.js
var BehaviorSubject = __webpack_require__(73);

// CONCATENATED MODULE: ./src/assets/javascripts/browser/location/_/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */

/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Retrieve location
 *
 * This function will return a `URL` object (and not `Location`) in order to
 * normalize typings across the application. Furthermore, locations need to be
 * tracked without setting them and `Location` is a singleton which represents
 * the current location.
 *
 * @returns URL
 */
function getLocation() {
    return new URL(location.href);
}
/**
 * Set location
 *
 * @param url - URL to change to
 */
function setLocation(url) {
    location.href = url.href;
}
/* ------------------------------------------------------------------------- */
/**
 * Watch location
 *
 * @returns Location subject
 */
function watchLocation() {
    return new BehaviorSubject["a" /* BehaviorSubject */](getLocation());
}

// CONCATENATED MODULE: ./src/assets/javascripts/browser/location/hash/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */



/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Retrieve location hash
 *
 * @returns Location hash
 */
function getLocationHash() {
    return location.hash.substring(1);
}
/**
 * Set location hash
 *
 * Setting a new fragment identifier via `location.hash` will have no effect
 * if the value doesn't change. When a new fragment identifier is set, we want
 * the browser to target the respective element at all times, which is why we
 * use this dirty little trick.
 *
 * @param hash - Location hash
 */
function setLocationHash(hash) {
    const el = createElement("a");
    el.href = hash;
    el.addEventListener("click", ev => ev.stopPropagation());
    el.click();
}
/* ------------------------------------------------------------------------- */
/**
 * Watch location hash
 *
 * @returns Location hash observable
 */
function watchLocationHash() {
    return Object(fromEvent["a" /* fromEvent */])(window, "hashchange")
        .pipe(Object(map["a" /* map */])(getLocationHash), Object(startWith["a" /* startWith */])(getLocationHash()), Object(filter["a" /* filter */])(hash => hash.length > 0), Object(share["a" /* share */])());
}
/**
 * Watch location target
 *
 * @returns Location target observable
 */
function watchLocationTarget() {
    return watchLocationHash()
        .pipe(Object(switchMap["a" /* switchMap */])(id => Object(of["a" /* of */])(getElement(`[id="${id}"]`))));
}

// CONCATENATED MODULE: ./src/assets/javascripts/browser/location/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */



// CONCATENATED MODULE: ./src/assets/javascripts/browser/media/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */


/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Watch media query
 *
 * @param query - Media query
 *
 * @returns Media observable
 */
function watchMedia(query) {
    const media = matchMedia(query);
    return Object(fromEvent["a" /* fromEvent */])(media, "change")
        .pipe(Object(map["a" /* map */])(ev => ev.matches), Object(startWith["a" /* startWith */])(media.matches));
}
/**
 * Watch print mode, cross-browser
 *
 * @returns Print observable
 */
function watchPrint() {
    return Object(merge["a" /* merge */])(watchMedia("print").pipe(Object(filter["a" /* filter */])(Boolean)), /* Webkit */ Object(fromEvent["a" /* fromEvent */])(window, "beforeprint") /* IE, FF */)
        .pipe(Object(mapTo["a" /* mapTo */])(undefined));
}
/* ------------------------------------------------------------------------- */
/**
 * Toggle an observable with a media observable
 *
 * @template T - Data type
 *
 * @param query$ - Media observable
 * @param factory - Observable factory
 *
 * @returns Toggled observable
 */
function at(query$, factory) {
    return query$
        .pipe(Object(switchMap["a" /* switchMap */])(active => active ? factory() : never["a" /* NEVER */]));
}

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/observable/from.js + 12 modules
var from = __webpack_require__(10);

// CONCATENATED MODULE: ./src/assets/javascripts/browser/request/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */


/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Fetch the given URL
 *
 * @param url - Request URL
 * @param options - Request options
 *
 * @returns Response observable
 */
function request(url, options = { credentials: "same-origin" }) {
    return Object(from["a" /* from */])(fetch(url, options))
        .pipe(Object(filter["a" /* filter */])(res => res.status === 200));
}
/**
 * Fetch JSON from the given URL
 *
 * @template T - Data type
 *
 * @param url - Request URL
 * @param options - Request options
 *
 * @returns Data observable
 */
function requestJSON(url, options) {
    return request(url, options)
        .pipe(Object(switchMap["a" /* switchMap */])(res => res.json()), Object(shareReplay["a" /* shareReplay */])(1));
}
/**
 * Fetch XML from the given URL
 *
 * @param url - Request URL
 * @param options - Request options
 *
 * @returns Data observable
 */
function requestXML(url, options) {
    const dom = new DOMParser();
    return request(url, options)
        .pipe(Object(switchMap["a" /* switchMap */])(res => res.text()), Object(map["a" /* map */])(res => dom.parseFromString(res, "text/xml")), Object(shareReplay["a" /* shareReplay */])(1));
}

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/observable/combineLatest.js + 1 modules
var combineLatest = __webpack_require__(54);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/distinctUntilKeyChanged.js
var distinctUntilKeyChanged = __webpack_require__(74);

// CONCATENATED MODULE: ./src/assets/javascripts/browser/viewport/offset/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */


/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Retrieve viewport offset
 *
 * On iOS Safari, viewport offset can be negative due to overflow scrolling.
 * As this may induce strange behaviors downstream, we'll just limit it to 0.
 *
 * @returns Viewport offset
 */
function getViewportOffset() {
    return {
        x: Math.max(0, pageXOffset),
        y: Math.max(0, pageYOffset)
    };
}
/**
 * Set viewport offset
 *
 * @param offset - Viewport offset
 */
function setViewportOffset({ x, y }) {
    window.scrollTo(x || 0, y || 0);
}
/* ------------------------------------------------------------------------- */
/**
 * Watch viewport offset
 *
 * @returns Viewport offset observable
 */
function watchViewportOffset() {
    return Object(merge["a" /* merge */])(Object(fromEvent["a" /* fromEvent */])(window, "scroll", { passive: true }), Object(fromEvent["a" /* fromEvent */])(window, "resize", { passive: true }))
        .pipe(Object(map["a" /* map */])(getViewportOffset), Object(startWith["a" /* startWith */])(getViewportOffset()));
}

// CONCATENATED MODULE: ./src/assets/javascripts/browser/viewport/size/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */


/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Retrieve viewport size
 *
 * @returns Viewport size
 */
function getViewportSize() {
    return {
        width: innerWidth,
        height: innerHeight
    };
}
/* ------------------------------------------------------------------------- */
/**
 * Watch viewport size
 *
 * @returns Viewport size observable
 */
function watchViewportSize() {
    return Object(fromEvent["a" /* fromEvent */])(window, "resize", { passive: true })
        .pipe(Object(map["a" /* map */])(getViewportSize), Object(startWith["a" /* startWith */])(getViewportSize()));
}

// CONCATENATED MODULE: ./src/assets/javascripts/browser/viewport/_/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */




/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Watch viewport
 *
 * @returns Viewport observable
 */
function watchViewport() {
    return Object(combineLatest["a" /* combineLatest */])([
        watchViewportOffset(),
        watchViewportSize()
    ])
        .pipe(Object(map["a" /* map */])(([offset, size]) => ({ offset, size })), Object(shareReplay["a" /* shareReplay */])(1));
}
/**
 * Watch viewport relative to element
 *
 * @param el - Element
 * @param options - Options
 *
 * @returns Viewport observable
 */
function watchViewportAt(el, { viewport$, header$ }) {
    const size$ = viewport$
        .pipe(Object(distinctUntilKeyChanged["a" /* distinctUntilKeyChanged */])("size"));
    /* Compute element offset */
    const offset$ = Object(combineLatest["a" /* combineLatest */])([size$, header$])
        .pipe(Object(map["a" /* map */])(() => ({
        x: el.offsetLeft,
        y: el.offsetTop
    })));
    /* Compute relative viewport, return hot observable */
    return Object(combineLatest["a" /* combineLatest */])([header$, viewport$, offset$])
        .pipe(Object(map["a" /* map */])(([{ height }, { offset, size }, { x, y }]) => ({
        offset: {
            x: offset.x - x,
            y: offset.y - y + height
        },
        size
    })));
}

// CONCATENATED MODULE: ./src/assets/javascripts/browser/viewport/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */




// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/throttle.js
var throttle = __webpack_require__(75);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/switchMapTo.js
var switchMapTo = __webpack_require__(76);

// CONCATENATED MODULE: ./src/assets/javascripts/browser/worker/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */


/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Watch a web worker
 *
 * This function returns an observable that sends all values emitted by the
 * message observable to the web worker. Web worker communication is expected
 * to be bidirectional (request-response) and synchronous. Messages that are
 * emitted during a pending request are throttled, the last one is emitted.
 *
 * @param worker - Web worker
 * @param options - Options
 *
 * @returns Worker message observable
 */
function watchWorker(worker, { tx$ }) {
    /* Intercept messages from worker-like objects */
    const rx$ = Object(fromEvent["a" /* fromEvent */])(worker, "message")
        .pipe(Object(map["a" /* map */])(({ data }) => data));
    /* Send and receive messages, return hot observable */
    return tx$
        .pipe(Object(throttle["a" /* throttle */])(() => rx$, { leading: true, trailing: true }), Object(tap["a" /* tap */])(message => worker.postMessage(message)), Object(switchMapTo["a" /* switchMapTo */])(rx$), Object(share["a" /* share */])());
}

// CONCATENATED MODULE: ./src/assets/javascripts/browser/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */











/***/ }),

/***/ 6:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "r", function() { return /* reexport */ setFocusable; });
__webpack_require__.d(__webpack_exports__, "e", function() { return /* reexport */ resetFocusable; });
__webpack_require__.d(__webpack_exports__, "o", function() { return /* reexport */ setAnchorState; });
__webpack_require__.d(__webpack_exports__, "c", function() { return /* reexport */ resetAnchorState; });
__webpack_require__.d(__webpack_exports__, "n", function() { return /* reexport */ setAnchorActive; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* reexport */ resetAnchorActive; });
__webpack_require__.d(__webpack_exports__, "p", function() { return /* reexport */ setDialogMessage; });
__webpack_require__.d(__webpack_exports__, "q", function() { return /* reexport */ setDialogState; });
__webpack_require__.d(__webpack_exports__, "d", function() { return /* reexport */ resetDialogState; });
__webpack_require__.d(__webpack_exports__, "s", function() { return /* reexport */ setHeaderState; });
__webpack_require__.d(__webpack_exports__, "f", function() { return /* reexport */ resetHeaderState; });
__webpack_require__.d(__webpack_exports__, "t", function() { return /* reexport */ setHeaderTitleState; });
__webpack_require__.d(__webpack_exports__, "g", function() { return /* reexport */ resetHeaderTitleState; });
__webpack_require__.d(__webpack_exports__, "u", function() { return /* reexport */ setSearchQueryPlaceholder; });
__webpack_require__.d(__webpack_exports__, "h", function() { return /* reexport */ resetSearchQueryPlaceholder; });
__webpack_require__.d(__webpack_exports__, "v", function() { return /* reexport */ setSearchResultMeta; });
__webpack_require__.d(__webpack_exports__, "j", function() { return /* reexport */ resetSearchResultMeta; });
__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ addToSearchResultList; });
__webpack_require__.d(__webpack_exports__, "i", function() { return /* reexport */ resetSearchResultList; });
__webpack_require__.d(__webpack_exports__, "x", function() { return /* reexport */ setSidebarOffset; });
__webpack_require__.d(__webpack_exports__, "l", function() { return /* reexport */ resetSidebarOffset; });
__webpack_require__.d(__webpack_exports__, "w", function() { return /* reexport */ setSidebarHeight; });
__webpack_require__.d(__webpack_exports__, "k", function() { return /* reexport */ resetSidebarHeight; });
__webpack_require__.d(__webpack_exports__, "y", function() { return /* reexport */ setSourceFacts; });
__webpack_require__.d(__webpack_exports__, "z", function() { return /* reexport */ setSourceState; });
__webpack_require__.d(__webpack_exports__, "A", function() { return /* reexport */ setTabsState; });
__webpack_require__.d(__webpack_exports__, "m", function() { return /* reexport */ resetTabsState; });

// UNUSED EXPORTS: setScrollLock, resetScrollLock

// CONCATENATED MODULE: ./src/assets/javascripts/actions/_/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */
/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Set focusable property
 *
 * @param el - Element
 * @param value - Tabindex value
 */
function setFocusable(el, value = 0) {
    el.setAttribute("tabindex", value.toString());
}
/**
 * Reset focusable property
 *
 * @param el - Element
 */
function resetFocusable(el) {
    el.removeAttribute("tabindex");
}
/**
 * Set scroll lock
 *
 * @param el - Scrollable element
 * @param value - Vertical offset
 */
function setScrollLock(el, value) {
    el.setAttribute("data-md-state", "lock");
    el.style.top = `-${value}px`;
}
/**
 * Reset scroll lock
 *
 * @param el - Scrollable element
 */
function resetScrollLock(el) {
    const value = -1 * parseInt(el.style.top, 10);
    el.removeAttribute("data-md-state");
    el.style.top = "";
    if (value)
        window.scrollTo(0, value);
}

// CONCATENATED MODULE: ./src/assets/javascripts/actions/anchor/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */
/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Set anchor state
 *
 * @param el - Anchor element
 * @param state - Anchor state
 */
function setAnchorState(el, state) {
    el.setAttribute("data-md-state", state);
}
/**
 * Reset anchor state
 *
 * @param el - Anchor element
 */
function resetAnchorState(el) {
    el.removeAttribute("data-md-state");
}
/* ------------------------------------------------------------------------- */
/**
 * Set anchor active
 *
 * @param el - Anchor element
 * @param value - Whether the anchor is active
 */
function setAnchorActive(el, value) {
    el.classList.toggle("md-nav__link--active", value);
}
/**
 * Reset anchor active
 *
 * @param el - Anchor element
 */
function resetAnchorActive(el) {
    el.classList.remove("md-nav__link--active");
}

// CONCATENATED MODULE: ./src/assets/javascripts/actions/dialog/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */
/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Set dialog message
 *
 * @param el - Dialog element
 * @param value - Dialog message
 */
function setDialogMessage(el, value) {
    el.firstElementChild.innerHTML = value;
}
/* ------------------------------------------------------------------------- */
/**
 * Set dialog state
 *
 * @param el - Dialog element
 * @param state - Dialog state
 */
function setDialogState(el, state) {
    el.setAttribute("data-md-state", state);
}
/**
 * Reset dialog state
 *
 * @param el - Dialog element
 */
function resetDialogState(el) {
    el.removeAttribute("data-md-state");
}

// CONCATENATED MODULE: ./src/assets/javascripts/actions/header/_/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */
/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Set header state
 *
 * @param el - Header element
 * @param state - Header state
 */
function setHeaderState(el, state) {
    el.setAttribute("data-md-state", state);
}
/**
 * Reset header state
 *
 * @param el - Header element
 */
function resetHeaderState(el) {
    el.removeAttribute("data-md-state");
}

// CONCATENATED MODULE: ./src/assets/javascripts/actions/header/title/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */
/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Set header title state
 *
 * @param el - Header title element
 * @param state - Header title state
 */
function setHeaderTitleState(el, state) {
    el.setAttribute("data-md-state", state);
}
/**
 * Reset header title state
 *
 * @param el - Header title element
 */
function resetHeaderTitleState(el) {
    el.removeAttribute("data-md-state");
}

// CONCATENATED MODULE: ./src/assets/javascripts/actions/header/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */



// EXTERNAL MODULE: ./src/assets/javascripts/_/index.ts
var _ = __webpack_require__(7);

// CONCATENATED MODULE: ./src/assets/javascripts/actions/search/query/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */

/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Set search query placeholder
 *
 * @param el - Search query element
 * @param value - Placeholder
 */
function setSearchQueryPlaceholder(el, value) {
    el.placeholder = value;
}
/**
 * Reset search query placeholder
 *
 * @param el - Search query element
 */
function resetSearchQueryPlaceholder(el) {
    el.placeholder = Object(_["c" /* translation */])("search.placeholder");
}

// EXTERNAL MODULE: ./src/assets/javascripts/utilities/index.ts + 2 modules
var utilities = __webpack_require__(8);

// CONCATENATED MODULE: ./src/assets/javascripts/actions/search/result/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */


/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Set number of search results
 *
 * @param el - Search result metadata element
 * @param value - Number of results
 */
function setSearchResultMeta(el, value) {
    switch (value) {
        /* No results */
        case 0:
            el.textContent = Object(_["c" /* translation */])("search.result.none");
            break;
        /* One result */
        case 1:
            el.textContent = Object(_["c" /* translation */])("search.result.one");
            break;
        /* Multiple result */
        default:
            el.textContent = Object(_["c" /* translation */])("search.result.other", Object(utilities["c" /* round */])(value));
    }
}
/**
 * Reset number of search results
 *
 * @param el - Search result metadata element
 */
function resetSearchResultMeta(el) {
    el.textContent = Object(_["c" /* translation */])("search.result.placeholder");
}
/* ------------------------------------------------------------------------- */
/**
 * Add an element to the search result list
 *
 * @param el - Search result list element
 * @param child - Search result element
 */
function addToSearchResultList(el, child) {
    el.appendChild(child);
}
/**
 * Reset search result list
 *
 * @param el - Search result list element
 */
function resetSearchResultList(el) {
    el.innerHTML = "";
}

// CONCATENATED MODULE: ./src/assets/javascripts/actions/search/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */



// CONCATENATED MODULE: ./src/assets/javascripts/actions/sidebar/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */
/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Set sidebar offset
 *
 * @param el - Sidebar element
 * @param value - Sidebar offset
 */
function setSidebarOffset(el, value) {
    el.style.top = `${value}px`;
}
/**
 * Reset sidebar offset
 *
 * @param el - Sidebar element
 */
function resetSidebarOffset(el) {
    el.style.top = "";
}
/* ------------------------------------------------------------------------- */
/**
 * Set sidebar height
 *
 * This function doesn't set the height of the actual sidebar, but of its first
 * child – the `.md-sidebar__scrollwrap` element in order to mitigiate jittery
 * sidebars when the footer is scrolled into view. At some point we switched
 * from `absolute` / `fixed` positioning to `sticky` positioning, significantly
 * reducing jitter in some browsers (respectively Firefox and Safari) when
 * scrolling from the top. However, top-aligned sticky positioning means that
 * the sidebar snaps to the bottom when the end of the container is reached.
 * This is what leads to the mentioned jitter, as the sidebar's height may be
 * updated too slowly.
 *
 * This behaviour can be mitigiated by setting the height of the sidebar to `0`
 * while preserving the padding, and the height on its first element.
 *
 * @param el - Sidebar element
 * @param value - Sidebar height
 */
function setSidebarHeight(el, value) {
    const scrollwrap = el.firstElementChild;
    scrollwrap.style.height = `${value - 2 * scrollwrap.offsetTop}px`;
}
/**
 * Reset sidebar height
 *
 * @param el - Sidebar element
 */
function resetSidebarHeight(el) {
    const scrollwrap = el.firstElementChild;
    scrollwrap.style.height = "";
}

// CONCATENATED MODULE: ./src/assets/javascripts/actions/source/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */
/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Set repository facts
 *
 * @param el - Repository element
 * @param child - Repository facts element
 */
function setSourceFacts(el, child) {
    el.lastElementChild.appendChild(child);
}
/**
 * Set repository state
 *
 * @param el - Repository element
 * @param state - Repository state
 */
function setSourceState(el, state) {
    el.lastElementChild.setAttribute("data-md-state", state);
}

// CONCATENATED MODULE: ./src/assets/javascripts/actions/tabs/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */
/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Set tabs state
 *
 * @param el - Tabs element
 * @param state - Tabs state
 */
function setTabsState(el, state) {
    el.setAttribute("data-md-state", state);
}
/**
 * Reset tabs state
 *
 * @param el - Tabs element
 */
function resetTabsState(el) {
    el.removeAttribute("data-md-state");
}

// CONCATENATED MODULE: ./src/assets/javascripts/actions/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */










/***/ }),

/***/ 63:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/observable/merge.js
var merge = __webpack_require__(65);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/switchMap.js
var switchMap = __webpack_require__(45);

// EXTERNAL MODULE: ./src/assets/javascripts/browser/index.ts + 19 modules
var browser = __webpack_require__(0);

// CONCATENATED MODULE: ./src/overrides/assets/javascripts/components/_/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */

/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Retrieve the element for a given component or throw a reference error
 *
 * @template T - Element type
 *
 * @param type - Component type
 * @param node - Node of reference
 *
 * @returns Element
 */
function getComponentElement(type, node = document) {
    return Object(browser["f" /* getElementOrThrow */])(`[data-mdx-component=${type}]`, node);
}
/**
 * Retrieve all elements for a given component
 *
 * @template T - Element type
 *
 * @param type - Component type
 * @param node - Node of reference
 *
 * @returns Elements
 */
function getComponentElements(type, node = document) {
    return Object(browser["h" /* getElements */])(`[data-mdx-component=${type}]`, node);
}

// EXTERNAL MODULE: ./src/assets/javascripts/_/index.ts
var _ = __webpack_require__(7);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/observable/fromEvent.js
var fromEvent = __webpack_require__(64);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/observable/combineLatest.js + 1 modules
var combineLatest = __webpack_require__(54);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/delay.js + 2 modules
var delay = __webpack_require__(91);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/map.js
var map = __webpack_require__(38);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/startWith.js
var startWith = __webpack_require__(66);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/distinctUntilChanged.js
var distinctUntilChanged = __webpack_require__(52);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/filter.js
var filter = __webpack_require__(51);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/withLatestFrom.js
var withLatestFrom = __webpack_require__(77);

// CONCATENATED MODULE: ./src/overrides/assets/javascripts/components/icon-search/query/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */



/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Mount icon search query
 *
 * @param el - Icon search query element
 *
 * @returns Icon search query component observable
 */
function mountIconSearchQuery(el) {
    /* Intercept focus and input events */
    const focus$ = Object(browser["u" /* watchElementFocus */])(el);
    const value$ = Object(merge["a" /* merge */])(Object(fromEvent["a" /* fromEvent */])(el, "keyup"), Object(fromEvent["a" /* fromEvent */])(el, "focus").pipe(Object(delay["a" /* delay */])(1)))
        .pipe(Object(map["a" /* map */])(() => el.value), Object(startWith["a" /* startWith */])(el.value), Object(distinctUntilChanged["a" /* distinctUntilChanged */])());
    /* Log search on blur */
    focus$
        .pipe(Object(filter["a" /* filter */])(active => !active), Object(withLatestFrom["a" /* withLatestFrom */])(value$))
        .subscribe(([, value]) => {
        const path = document.location.pathname;
        ga("send", "pageview", `${path}?q=[icon]+${value}`);
    });
    /* Combine into single observable */
    return Object(combineLatest["a" /* combineLatest */])([value$, focus$])
        .pipe(Object(map["a" /* map */])(([value, focus]) => ({ ref: el, value, focus })));
}

// EXTERNAL MODULE: ./node_modules/fuzzaldrin-plus/lib/fuzzaldrin.js
var fuzzaldrin = __webpack_require__(40);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/Subject.js + 1 modules
var Subject = __webpack_require__(28);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/scheduler/animationFrame.js + 3 modules
var animationFrame = __webpack_require__(90);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/observable/of.js
var of = __webpack_require__(68);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/distinctUntilKeyChanged.js
var distinctUntilKeyChanged = __webpack_require__(74);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/observeOn.js
var observeOn = __webpack_require__(79);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/tap.js
var tap = __webpack_require__(72);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/bufferCount.js
var bufferCount = __webpack_require__(80);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/zipWith.js + 1 modules
var zipWith = __webpack_require__(93);

// EXTERNAL MODULE: ./node_modules/rxjs/dist/esm/internal/operators/finalize.js
var finalize = __webpack_require__(70);

// EXTERNAL MODULE: ./src/assets/javascripts/actions/index.ts + 12 modules
var actions = __webpack_require__(6);

// EXTERNAL MODULE: ./src/assets/javascripts/utilities/index.ts + 2 modules
var utilities = __webpack_require__(8);

// CONCATENATED MODULE: ./src/overrides/assets/javascripts/templates/icon-search/index.tsx
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */



/* ----------------------------------------------------------------------------
 * Helper functions
 * ------------------------------------------------------------------------- */
/**
 * Highlight an icon search result
 *
 * @param icon - Icon
 * @param query - Search query
 *
 * @returns Highlighted result
 */
function highlight(icon, query) {
    return Object(fuzzaldrin["wrap"])(icon.shortcode, query, {
        wrap: {
            tagOpen: "<b>",
            tagClose: "</b>"
        }
    });
}
/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Render an icon search result
 *
 * @param icon - Icon
 * @param query - Search query
 *
 * @returns Element
 */
function renderIconSearchResult(icon, query) {
    return (Object(utilities["a" /* h */])("li", { class: "mdx-icon-search-result__item" },
        Object(utilities["a" /* h */])("span", { class: "twemoji" },
            Object(utilities["a" /* h */])("img", { src: icon.url })),
        Object(utilities["a" /* h */])("button", { class: "md-clipboard--inline", title: Object(_["c" /* translation */])("clipboard.copy"), "data-clipboard-text": `:${icon.shortcode}:` },
            Object(utilities["a" /* h */])("code", null, `:${highlight(icon, query)}:`))));
}

// CONCATENATED MODULE: ./src/overrides/assets/javascripts/templates/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */


// CONCATENATED MODULE: ./src/overrides/assets/javascripts/components/icon-search/result/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */






/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Watch icon search result
 *
 * @param _el - Icon search result element
 * @param options - Options
 *
 * @returns Icon search result observable
 */
function watchIconSearchResult(_el, { index$, query$ }) {
    return Object(combineLatest["a" /* combineLatest */])([
        query$.pipe(Object(distinctUntilKeyChanged["a" /* distinctUntilKeyChanged */])("value")),
        index$
            .pipe(Object(map["a" /* map */])(({ icons, emojis }) => [
            ...Object.keys(icons.data),
            ...Object.keys(emojis.data)
        ]))
    ])
        .pipe(Object(map["a" /* map */])(([{ value }, data]) => Object(fuzzaldrin["filter"])(data, value)), Object(switchMap["a" /* switchMap */])(shortcodes => index$.pipe(Object(map["a" /* map */])(({ icons, emojis }) => ({
        data: shortcodes.map(shortcode => {
            const category = shortcode in icons.data
                ? icons
                : emojis;
            return {
                shortcode,
                url: [
                    category.base,
                    category.data[shortcode]
                ].join("")
            };
        })
    })))));
}
/**
 * Mount icon search result
 *
 * @param el - Icon search result element
 * @param options - Options
 *
 * @returns Icon search result component observable
 */
function mountIconSearchResult(el, { index$, query$ }) {
    const internal$ = new Subject["a" /* Subject */]();
    const boundary$ = Object(browser["w" /* watchElementThreshold */])(el)
        .pipe(Object(filter["a" /* filter */])(Boolean));
    /* Update search result metadata */
    const meta = Object(browser["f" /* getElementOrThrow */])(":scope > :first-child", el);
    internal$
        .pipe(Object(observeOn["a" /* observeOn */])(animationFrame["a" /* animationFrameScheduler */]), Object(withLatestFrom["a" /* withLatestFrom */])(query$))
        .subscribe(([{ data }, { value }]) => {
        if (value)
            Object(actions["v" /* setSearchResultMeta */])(meta, data.length);
        else
            Object(actions["j" /* resetSearchResultMeta */])(meta);
    });
    /* Update icon search result list */
    const list = Object(browser["f" /* getElementOrThrow */])(":scope > :last-child", el);
    internal$
        .pipe(Object(observeOn["a" /* observeOn */])(animationFrame["a" /* animationFrameScheduler */]), Object(tap["a" /* tap */])(() => Object(actions["i" /* resetSearchResultList */])(list)), Object(switchMap["a" /* switchMap */])(({ data }) => Object(merge["a" /* merge */])(Object(of["a" /* of */])(...data.slice(0, 10)), Object(of["a" /* of */])(...data.slice(10))
        .pipe(Object(bufferCount["a" /* bufferCount */])(10), Object(zipWith["a" /* zipWith */])(boundary$), Object(switchMap["a" /* switchMap */])(([chunk]) => Object(of["a" /* of */])(...chunk))))), Object(withLatestFrom["a" /* withLatestFrom */])(query$))
        .subscribe(([result, { value }]) => {
        Object(actions["a" /* addToSearchResultList */])(list, renderIconSearchResult(result, value));
    });
    /* Create and return component */
    return watchIconSearchResult(el, { query$, index$ })
        .pipe(Object(tap["a" /* tap */])(internal$), Object(finalize["a" /* finalize */])(() => internal$.complete()), Object(map["a" /* map */])(state => (Object.assign({ ref: el }, state))));
}

// CONCATENATED MODULE: ./src/overrides/assets/javascripts/components/icon-search/_/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */






/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Mount icon search
 *
 * @param el - Icon search element
 *
 * @returns Icon search component observable
 */
function mountIconSearch(el) {
    const config = Object(_["a" /* configuration */])();
    const index$ = Object(browser["l" /* requestJSON */])(`${config.base}/overrides/assets/javascripts/icon_search_index.json`);
    /* Retrieve nested components */
    const query = getComponentElement("icon-search-query", el);
    const result = getComponentElement("icon-search-result", el);
    /* Create and return component */
    const query$ = mountIconSearchQuery(query);
    return Object(merge["a" /* merge */])(query$, mountIconSearchResult(result, { index$, query$ }));
}

// CONCATENATED MODULE: ./src/overrides/assets/javascripts/components/icon-search/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */




// CONCATENATED MODULE: ./src/overrides/assets/javascripts/components/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */



// CONCATENATED MODULE: ./src/overrides/assets/javascripts/integrations/analytics/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */

/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Set up extra analytics events
 */
function setupAnalytics() {
    Object(fromEvent["a" /* fromEvent */])(document.body, "click")
        .subscribe(ev => {
        if (ev.target instanceof HTMLElement) {
            const el = ev.target.closest("a[href^=http]");
            if (el instanceof HTMLLinkElement)
                ga("send", "event", "outbound", "click", el.href);
        }
    });
}

// CONCATENATED MODULE: ./src/overrides/assets/javascripts/integrations/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */


// CONCATENATED MODULE: ./src/overrides/assets/javascripts/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */




/* ----------------------------------------------------------------------------
 * Application
 * ------------------------------------------------------------------------- */
/* Set up extra analytics events */
setupAnalytics();
document$
    .pipe(Object(switchMap["a" /* switchMap */])(() => Object(merge["a" /* merge */])(
/* Icon search */
...getComponentElements("icon-search")
    .map(el => mountIconSearch(el)))))
    .subscribe();


/***/ }),

/***/ 7:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return configuration; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return feature; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "c", function() { return translation; });
/* harmony import */ var _browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */

/* ----------------------------------------------------------------------------
 * Data
 * ------------------------------------------------------------------------- */
/**
 * Retrieve global configuration and make base URL absolute
 */
const script = Object(_browser__WEBPACK_IMPORTED_MODULE_0__[/* getElementOrThrow */ "f"])("#__config");
const config = JSON.parse(script.textContent);
config.base = new URL(config.base, Object(_browser__WEBPACK_IMPORTED_MODULE_0__[/* getLocation */ "i"])())
    .toString()
    .replace(/\/$/, "");
/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Retrieve global configuration
 *
 * @returns Global configuration
 */
function configuration() {
    return config;
}
/**
 * Check whether a feature flag is enabled
 *
 * @param flag - Feature flag
 *
 * @returns Test result
 */
function feature(flag) {
    return config.features.includes(flag);
}
/**
 * Retrieve the translation for the given key
 *
 * @param key - Key to be translated
 * @param value - Value to be replaced
 *
 * @returns Translation
 */
function translation(key, value) {
    return typeof value !== "undefined"
        ? config.translations[key].replace("#", value.toString())
        : config.translations[key];
}


/***/ }),

/***/ 8:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, "a", function() { return /* reexport */ h; });
__webpack_require__.d(__webpack_exports__, "d", function() { return /* reexport */ truncate; });
__webpack_require__.d(__webpack_exports__, "c", function() { return /* reexport */ round; });
__webpack_require__.d(__webpack_exports__, "b", function() { return /* reexport */ hash; });

// CONCATENATED MODULE: ./src/assets/javascripts/utilities/h/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */
/* ----------------------------------------------------------------------------
 * Helper functions
 * ------------------------------------------------------------------------- */
/**
 * Append a child node to an element
 *
 * @param el - Element
 * @param child - Child node(s)
 */
function appendChild(el, child) {
    /* Handle primitive types (including raw HTML) */
    if (typeof child === "string" || typeof child === "number") {
        el.innerHTML += child.toString();
        /* Handle nodes */
    }
    else if (child instanceof Node) {
        el.appendChild(child);
        /* Handle nested children */
    }
    else if (Array.isArray(child)) {
        for (const node of child)
            appendChild(el, node);
    }
}
/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * JSX factory
 *
 * @param tag - HTML tag
 * @param attributes - HTML attributes
 * @param children - Child elements
 *
 * @returns Element
 */
function h(tag, attributes, ...children) {
    const el = document.createElement(tag);
    /* Set attributes, if any */
    if (attributes)
        for (const attr of Object.keys(attributes))
            if (typeof attributes[attr] !== "boolean")
                el.setAttribute(attr, attributes[attr]);
            else if (attributes[attr])
                el.setAttribute(attr, "");
    /* Append child nodes */
    for (const child of children)
        appendChild(el, child);
    /* Return element */
    return el;
}

// CONCATENATED MODULE: ./src/assets/javascripts/utilities/string/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */
/* ----------------------------------------------------------------------------
 * Functions
 * ------------------------------------------------------------------------- */
/**
 * Truncate a string after the given number of characters
 *
 * This is not a very reasonable approach, since the summaries kind of suck.
 * It would be better to create something more intelligent, highlighting the
 * search occurrences and making a better summary out of it, but this note was
 * written three years ago, so who knows if we'll ever fix it.
 *
 * @param value - Value to be truncated
 * @param n - Number of characters
 *
 * @returns Truncated value
 */
function truncate(value, n) {
    let i = n;
    if (value.length > i) {
        while (value[i] !== " " && --i > 0) { /* keep eating */ }
        return `${value.substring(0, i)}...`;
    }
    return value;
}
/**
 * Round a number for display with repository facts
 *
 * This is a reverse-engineered version of GitHub's weird rounding algorithm
 * for stars, forks and all other numbers. While all numbers below `1,000` are
 * returned as-is, bigger numbers are converted to fixed numbers:
 *
 * - `1,049` => `1k`
 * - `1,050` => `1.1k`
 * - `1,949` => `1.9k`
 * - `1,950` => `2k`
 *
 * @param value - Original value
 *
 * @returns Rounded value
 */
function round(value) {
    if (value > 999) {
        const digits = +((value - 950) % 1000 > 99);
        return `${((value + 0.000001) / 1000).toFixed(digits)}k`;
    }
    else {
        return value.toString();
    }
}
/**
 * Simple hash function
 *
 * @see https://bit.ly/2wsVjJ4 - Original source
 *
 * @param value - Value to be hashed
 *
 * @returns Hash as 32bit integer
 */
function hash(value) {
    let h = 0;
    for (let i = 0, len = value.length; i < len; i++) {
        h = ((h << 5) - h) + value.charCodeAt(i);
        h |= 0; // Convert to 32bit integer
    }
    return h;
}

// CONCATENATED MODULE: ./src/assets/javascripts/utilities/index.ts
/*
 * Copyright (c) 2016-2021 Martin Donath <martin.donath@squidfunk.com>
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */




/***/ })

/******/ })));
//# sourceMappingURL=bundle.60ad80e4.min.js.map